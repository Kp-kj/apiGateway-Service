// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "gateway/internal/handler/admin"
	ping "gateway/internal/handler/ping"
	user "gateway/internal/handler/user"
	"gateway/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: ping.PingHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/userLogin",
				Handler: user.UserHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/getHelpCategoryList",
				Handler: user.GetHelpCategoryListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BlackMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/userLogout",
					Handler: user.UserLogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getUserInfo",
					Handler: user.GetUserInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/admin/adminLogin",
				Handler: admin.AdminLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/admin/adminLogout",
				Handler: admin.AdminLogoutHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/getCurrentOnlinePerson",
				Handler: admin.GetCurrentOnlinePersonHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/getRegisteredPopulation",
				Handler: admin.GetRegisteredPopulationHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/getUserInfo",
				Handler: admin.AdminUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/getUserListByCondition",
				Handler: admin.GetUserListByConditionHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/batchUpdateUserBlackStatus",
				Handler: admin.BatchUpdateUserBlackStatusHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.AdminAuth.AccessSecret),
		rest.WithPrefix("/v1"),
	)
}
