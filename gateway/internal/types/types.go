// Code generated by goctl. DO NOT EDIT.
package types

type UserLogin struct {
	Code         string `json:"code"`
	CodeVerifier string `json:"codeVerifier"`
	InviteId     string `json:"inviteId"`
}

type UserLoginReply struct {
	Token string `json:"token"`
}

type AdminLogin struct {
	AdminName     string `json:"adminName"`
	AdminPassword string `json:"adminPassword"`
}

type AdminLoginReply struct {
	Token string `json:"token"`
}

type UserInfoReply struct {
	UserId      string `json:"userId"`
	UserName    string `json:"userName"`
	TwitterName string `json:"twitterName"`
	UserAvatar  string `json:"userAvatar"`
	IsNew       int64  `json:"isNew"`
}

type HelpCategoryList struct {
	LanguageCode string `json:"languageCode"`
}

type GetHelpCategoryList struct {
	LanguageCode string `json:"languageCode"`
}

type HelpCategoryListReply struct {
	CategoryList []CategoryList `json:"categoryList"`
}

type CategoryList struct {
	CategoryId   string `json:"categoryId"`
	CategoryName string `json:"categoryName"`
}

type CurrentOnlinePersonReply struct {
	CurrentOnlinePerson int64 `json:"currentOnlinePerson"`
}

type RegisteredPopulationReply struct {
	RegisteredPopulation int64 `json:"registeredPopulation"`
}

type GetUserListByCondition struct {
	BlackStatus *int64  `json:"blackStatus"` //冻结状态
	PageNum     int64   `json:"pageNum"`     //页码
	PageSize    int64   `json:"pageSize"`    //每页条数
	OrderType   *string `json:"order"`       //排序
	TwitterId   *string `json:"twitterId"`   //推特id
}

type GetUserListByConditionReply struct {
	TwitterId     string `json:"twitterId"`     //推特id
	UserID        int64  `json:"userId"`        //用户id
	RegisterAt    int64  `json:"registerAt"`    //注册时间
	RecomendBy    string `json:"recomendBy"`    //推荐人
	IsBlacklisted int64  `json:"isBlacklisted"` //是否冻结
}

type BatchUpdateUserBlackStatus struct {
	UserIdList  []int64 `json:"userIdList"`  //用户id列表
	BlackStatus int64   `json:"blackStatus"` //冻结状态
}

type BatchUpdateUserBlackStatusReply struct {
	UserIdList  []int64 `json:"userIdList"`  //用户id列表
	BlackStatus int64   `json:"blackStatus"` //冻结状态
}

type CreateAdminUser struct {
	AdminName     string `json:"adminName"`     //管理员名称
	AdminPassword string `json:"adminPassword"` //管理员密码
}

type CreateAdminUserReply struct {
	Token string `json:"token"`
}

type GetHelpDocumentTitleList struct {
	HelpCategoryId string `json:"helpCategoryId"` //帮助文档分类id
	LanguageCode   string `json:"languageCode"`   //语言编码
}

type GetHelpDocumentTitleListReply struct {
	HelpDocumentTitleList []HelpDocumentTitleList `json:"helpDocumentTitleList"`
}

type HelpDocumentTitleList struct {
	HelpDocumentId int64  `json:"helpDocumentId"` //帮助文档id
	DocumentTitle  string `json:"DocumentTitle"`  //帮助文档标题
	LanguageCode   string `json:"languageCode"`   //语言编码
}

type HelpDocumentTitleListReply struct {
	HelpDocumentTitleList []HelpDocumentTitleList `json:"helpDocumentTitleList"`
}

type GetContentByHelpDocumentId struct {
	HelpDocumentId string `json:"helpDocumentId"` //帮助文档id
	LanguageCode   string `json:"languageCode"`   //语言编码
}

type ContentByHelpDocumentIdReply struct {
	HelpDocumentId  int64  `json:"helpDocumentId"`    //帮助文档id
	DocumentContent string `json:"documentContent"`   //帮助文档内容
	LanguageCode    string `json:"languageCode"`      //语言编码
	DocumentTitle   string `json:"helpDocumentTitle"` //帮助文档标题
}

type GetMessageList struct {
	LastNoticeId int64 `json:"lastNoticeId"` //通知时间
	NoticeType   int64 `json:"noticeType"`   //通知类型 1:系统通知 2:用户通知 3:全部
}

type NoticeList struct {
	NoticeId      int64  `json:"noticeId"`      //通知id
	NoticeTitle   string `json:"noticeTitle"`   //通知标题
	NoticeContent string `json:"noticeContent"` //通知内容
	NoticeTime    int64  `json:"noticeTime"`    //通知时间
	NoticeType    int64  `json:"noticeType"`    //通知类型 1:系统通知 2:用户通知
	NoticeStatus  int64  `json:"noticeStatus"`  //通知状态 1:未读 2:已读
}

type Noticelds struct {
	SystemNoticeIds          int64 `json:"systemNoticeIds"`
	TargetSystemNoticeStatus int64 `json:"targetSystemNoticeStatus"`
}

type EditNoticeStatus struct {
	EditItems []Noticelds `json:"noticelds"` // 批量编辑通知的信息
}

type EditNoticeStatusReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type GetMessageListReply struct {
	NoticeList []NoticeList `json:"noticeList"`
}

type GetMessageByNoticeId struct {
	NoticeId int64 `json:"noticeId"` //通知id
}

type AddCategory struct {
	CategoryName string `json:"categoryName"` //分类名称
	LanguageCode string `json:"languageCode"` //语言编码
}

type AddCategoryReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type GetNoticeBy struct {
	SystemNoticeId      int64  `json:"systemNoticeId"`      //系统通知id
	SystemNoticeTitle   string `json:"systemNoticeTitle"`   //系统通知标题
	SystemNoticeContent string `json:"systemNoticeContent"` //系统通知内容
	SystemNoticeStatus  int64  `json:"systemNoticeStatus"`  //系统通知状态
	SystemNoticeTime    int64  `json:"systemNoticeTime"`    //系统通知时间
	IsAutoPublish       bool   `json:"isAutoPublish"`       //是否自动发布
}

type GetNoticeByReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type EditNotice struct {
	SystemNoticeId      int64  `json:"systemNoticeId"`      //系统通知id
	SystemNoticeTitle   string `json:"systemNoticeTitle"`   //系统通知标题
	SystemNoticeContent string `json:"systemNoticeContent"` //系统通知内容
	SystemNoticeStatus  int64  `json:"systemNoticeStatus"`  //系统通知状态
	SystemNoticeTime    string `json:"systemNoticeTime"`    //系统通知时间
	IsAutoPublish       bool   `json:"isAutoPublish"`       //是否自动发布
}

type EditNoticeReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type CreatePublishTaskInput struct {
	Creator      string        `json:"creator"`
	TweetAddress string        `json:"tweetAddress"`
	Label        []string      `json:"label"`
	AwardBudget  float64       `json:"awardBudget"`
	MaxUser      int64         `json:"maxUser"`
	AwardAmount  float64       `json:"awardAmount"`
	TaskDemand   []*TaskDemand `json:"taskDemand"`
}

type TaskDemand struct {
	TaskID     uint   `json:"taskId"`
	TaskName   int    `json:"taskName"`
	TaskDemand string `json:"taskDemand"`
	Article    string `json:"article"`
}

type Mistake struct {
	Msg string `json:"msg"`
}

type RePublishTask struct {
	PaginationData   PaginationData      `json:"paging"`
	RePublishTaskBak []*RePublishTaskBak `json:"data"`
}

type RePublishTaskBak struct {
	TaskID        uint64        `json:"taskId"`
	CreatedAt     string        `json:"createdAt"`
	Creator       string        `json:"creator"`
	CreatorName   string        `json:"creatorName"`
	CreatorNick   string        `json:"creatorNick"`
	CreatorAvatar string        `json:"creatorAvatar"`
	Status        int32         `json:"status"`
	TweetDetails  string        `json:"tweetDetails"`
	TweetPicture  string        `json:"tweetPicture"`
	Label         string        `json:"label"`
	AwardBudget   float64       `json:"awardBudget"`
	MaxUser       int32         `json:"maxUser"`
	AwardAmount   float64       `json:"awardAmount"`
	EndTime       string        `json:"endTime"`
	Accomplish    int32         `json:"accomplish"`
	TaskDemand    []*TaskDemand `json:"taskDemand"`
}

type PaginationData struct {
	Total   int64 `json:"total"`
	Page    int64 `json:"page"`
	PerPage int64 `json:"per_page"`
}

type PublishTaskInput struct {
	Status   int64 `json:"status"`
	CurrPage int64 `json:"currPage"`
	MaxNum   int64 `json:"maxNum"`
}

type ReTaskDetails struct {
	RePublishTaskBak RePublishTaskBak  `json:"publishTask"`
	ParticipantBak   []*ParticipantBak `json:"participant"`
	TaskDemandBak    []*TaskDemandBak  `json:"taskStatus"`
}

type TaskDetailsInput struct {
	TaskId uint64 `json:"taskId"`
	UserId string `json:"userId"`
}

type ParticipantBak struct {
	UserId      string  `json:"userId"`
	UserName    string  `json:"userName"`
	NickName    string  `json:"nickName"`
	Avatar      string  `json:"avatar"`
	AwardAmount float64 `json:"awardAmount"`
	TaskID      uint64  `json:"taskId"`
	Status      int32   `json:"status"`
}

type TaskDemandBak struct {
	TaskID     uint64 `json:"taskId"`
	TaskName   int64  `json:"taskName"`
	TaskDemand string `json:"taskDemand"`
	Article    string `json:"article"`
	Status     int32  `json:"status"`
}

type UserLaunchTaskListInput struct {
	UserId   string `json:"userId"`
	CurrPage int64  `json:"currPage"`
	MaxNum   int64  `json:"maxNum"`
	Status   int64  `json:"status"`
}

type CreateLabelInput struct {
	UserId string `json:"userId"`
	Label  string `json:"label"`
}

type TaskIDInquireInput struct {
	Id uint64 `json:"id"`
}

type UserIDInquireInput struct {
	UserId string `json:"userId"`
}

type ReLabelListOut struct {
	ReLabelList []*ReLabelList `json:"reLabelList"`
}

type ReLabelList struct {
	Id      uint64 `json:"id"`
	Creator string `json:"creator"`
	Content string `json:"content"`
}

type PerformTaskInput struct {
	TaskId uint64 `json:"taskId"`
	UserId string `json:"userId"`
}

type VoluntarilyTaskScheduleInput struct {
	UserId string `json:"userId"`
	TaskId int64  `json:"taskId"`
	Genre  int64  `json:"genre"`
}

type TreasureTaskSrtInput struct {
	Id                uint64               `json:"id"`
	Name              string               `json:"name"`
	DemandIntegral    int64                `json:"demandIntegral"`
	TaskReward        int64                `json:"taskReward"`
	ExperienceReward  int64                `json:"experienceReward"`
	RewardQuantity    int64                `json:"rewardQuantity"`
	TreasureTaskStage []*TreasureTaskStage `json:"treasureTaskStage"`
}

type TreasureTaskStage struct {
	ID               int64 `json:"iD"`
	Treasure         int64 `json:"treasure"`
	TreasureSequence int64 `json:"treasureSequence"`
	StageExperience  int64 `json:"stageExperience"`
	StageReward      int64 `json:"stageReward"`
}

type TreasureTaskInput struct {
	Id     uint64 `json:"id"`
	Status int32  `json:"status"`
}

type TreasureTaskListInput struct {
	Name     string `json:"name"`
	Reward   int64  `json:"reward"`
	CurrPage int64  `json:"currPage"`
	MaxNum   int64  `json:"maxNum"`
}

type ReTreasureTaskSrt struct {
	PaginationData       PaginationData          `json:"paginationData"`
	TreasureTaskSrtInput []*TreasureTaskSrtInput `json:"treasureTaskSrtInput"`
}

type ReSubtaskStyle struct {
	SubtaskStyle []*SubtaskStyle `json:"subtaskStyle"`
}

type SubtaskStyle struct {
	TaskId         int64  `json:"taskId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
}

type AssociatedSubtaskSrt struct {
	AssociatedId   uint64 `json:"associatedId"`
	TaskId         uint64 `json:"taskId"`
	TreasureId     uint64 `json:"treasureId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
	Reward         int64  `json:"reward"`
	Experience     int64  `json:"experience"`
	Number         int64  `json:"number"`
	Article        string `json:"article"`
	Link           string `json:"link"`
	Label          string `json:"label"`
}

type ReAssociatedSubtask struct {
	AssociatedSubtask []*AssociatedSubtask `json:"associatedSubtask"`
}

type AssociatedSubtask struct {
	TaskId         uint64 `json:"taskId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
	Reward         int64  `json:"reward"`
	Experience     int64  `json:"experience"`
	Number         int64  `json:"number"`
	Article        string `json:"article"`
	Link           string `json:"link"`
	Label          string `json:"label"`
	TreasureId     uint64 `json:"treasureId"`
}

type AmendChestCollectionInput struct {
	UserId string `json:"userId"`
	Amount int64  `json:"amount"`
}

type ReChestCollectionSrt struct {
	SerId                 string                   `json:"serId"`
	DemandIntegral        int64                    `json:"demandIntegral"`
	ChestAmount           int64                    `json:"chestAmount"`
	RewardQuantity        int64                    `json:"rewardQuantity"`
	TreasureTaskStageSeed []*TreasureTaskStageSeed `json:"treasureTaskStageSeed"`
	AssociatedSubtaskSeed []*AssociatedSubtaskSeed `json:"associatedSubtaskSeed"`
}

type TreasureTaskStageSeed struct {
	Treasure         int64   `json:"treasure"`
	TreasureSequence int64   `json:"treasureSequence"`
	StageExperience  int64   `json:"stageExperience"`
	TreasureRatio    float64 `json:"treasureRatio"`
	StageReward      int64   `json:"stageReward"`
}

type AssociatedSubtaskSeed struct {
	TreasureId     int64  `json:"treasureId"`
	TaskId         int64  `json:"taskId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
	Reward         int64  `json:"reward"`
	Experience     int64  `json:"experience"`
	Number         int64  `json:"number"`
	Article        string `json:"article"`
	Link           string `json:"link"`
	Label          string `json:"label"`
	Complete       int64  `json:"complete"`
}

type CreateUserPowerTaskInput struct {
	PublishesUserId string `json:"publishesUserId"`
	HelperUserId    string `json:"helperUserId"`
}

type CreateCryptominerInput struct {
	AdminUserID         int64  `json:"adminUserId"`
	CryptominerName     string `json:"cryptominerName"`
	CryptominerPicture  string `json:"cryptominerPicture"`
	CryptominerDescribe string `json:"cryptominerDescribe"`
	CryptominerPrice    int64  `json:"cryptominerPrice"`
	CryptominerDuration int64  `json:"cryptominerDuration"`
	CryptominerPower    int64  `json:"cryptominerPower"`
	PaymentWay          string `json:"paymentWay"`
}

type IsSuccessReply struct {
	IsSuccess bool `json:"isSuccess"` // 创建成功
}

type CreatePropInput struct {
	AdminUserID  int64  `json:"adminUserId"`  // 创建者id
	PropName     string `json:"propName"`     // 矿机名称
	PropPicture  string `json:"propPicture"`  // 矿机图片
	PropDescribe string `json:"propDescribe"` // 矿机描述
	PropPrice    int64  `json:"propPrice"`    // 矿机价格
	PaymentWay   string `json:"paymentWay"`   // 支付方式 0：U 1：ADF
}

type AdminGoodListInput struct {
	AdminUserID int64 `json:"adminUserId"` // 管理员id
}

type Activity struct {
	ActivityID       int64  `json:"activityId"`       // 关联矿机种类id
	CryptominerName  string `json:"cryptominerName"`  // 矿机名称
	UserAmount       int64  `json:"userAmount"`       // 砍价人数
	MinPrice         string `json:"minPrice"`         // 最小砍价金额
	FirstBargainPer  string `json:"firstBargainPer"`  // 首次砍价百分比
	FriendBargainPer string `json:"friendBargainPer"` // 好友砍价比率
	IsActivation     int64  `json:"isActivation"`     // 矿机状态  0：未开启  1：开启
}

type AdminGoodListReply struct {
	AdminGood []*AdminGood `json:"adminGood"`
}

type AdminGood struct {
	GoodTypeID   int64  `json:"goodTypeID"`   // 商品typeid
	GoodName     string `json:"goodName"`     // 商品名称
	GoodDuration int64  `json:"goodDuration"` // 商品工作时长
	PaymentWay   string `json:"paymentWay"`   // 支付方式 0：U ,1:ADF
	PropPrice    int64  `json:"propPrice"`    // 商品价格
	GoodStatus   string `json:"goodStatus"`   // 商品状态  0：待上架  1：已上架 2：未上架
}

type StartGoodInput struct {
	GoodTypeID int64 `json:"goodTypeId"` // 商品种类id
}

type CreateActivityInput struct {
	AdminUserID       int64   `json:"adminUserID"`       // 管理员id
	CryptominerTypeID int64   `json:"cryptominerTypeID"` // 关联矿机种类id
	UserAmount        int64   `json:"userAmount"`        // 砍价人数
	MinPrice          float64 `json:"minPrice"`          // 最小砍价金额
	FirstBargainPer   float64 `json:"firstBargainPer"`   // 首次砍价百分比
	FriendBargainPer  float64 `json:"friendBargainPer"`  // 好友砍价比率
}

type AdminActivityListInput struct {
	AdminUserID int64 `json:"adminUserID"` // 管理员id
}

type AdminActivityListReply struct {
	Activity []*Activity `json:"activity"`
}

type StartActivityInput struct {
	ActivityID int64 `json:"activityId"` // 关联矿机种类id
}

type GetGoodsListInput struct {
	UserID int64 `json:"userId"`
}

type GetGoodsListReply struct {
	Cryptominer []*Cryptominer `json:"cryptominer"`
	Prop        []*Prop        `json:"prop"`
}

type Cryptominer struct {
	CryptominerID        int64  `json:"cryptominerId"` // ID
	UserID               int64  `json:"userId"`
	CryptominerTypeID    int64  `json:"cryptominerTypeId"`    // 矿机种类id
	CryptominerName      string `json:"cryptominerName"`      // 矿机名称
	CryptominerPicture   string `json:"cryptominerPicture"`   // 矿机图片
	CryptominerDescribe  string `json:"cryptominerDescribe"`  // 矿机描述
	CryptominerPrice     int64  `json:"cryptominerPrice"`     // 矿机价格
	OptionalStatus       string `json:"optionalStatus"`       // 矿机状态 0：未购买 1：工作中 2：已失效 3：砍价中
	PurchaseTime         string `json:"purchaseTime"`         // 购买时间
	IsBargain            bool   `json:"isBargain"`            // 是否可砍
	PurchaseWay          string `json:"purchaseWay"`          // 购买方式 0：全额购买 1：限时砍价
	PaymentWay           string `json:"paymentWay"`           // 支付方式 0：U 1：ADF
	CryptominerStartTime string `json:"cryptominerStartTime"` // 矿机开始运作时间
	CryptominerEndTime   string `json:"cryptominerEndTime"`   // 矿机失效时间
	CryptominerDuration  int64  `json:"cryptominerDuration"`  // 矿机运作时间
	CryptominerPower     int64  `json:"cryptominerPower"`     // 矿机算力
}

type Prop struct {
	PropID       int64  `json:"propId"` // ID
	UserID       int64  `json:"userId"`
	PropTypeID   int64  `json:"propTypeId"`   // 道具种类id
	PropName     string `json:"propName"`     // 道具名称
	PropPicture  string `json:"propPicture"`  // 道具图片
	PropDescribe string `json:"propDescribe"` // 道具描述
	PropPrice    int64  `json:"propPrice"`    // 道具价格
	PurchaseTime string `json:"purchaseTime"` // 购买时间
	PaymentWay   string `json:"paymentWay"`   // 支付方式 0：U 1：ADF
}

type JudgeBargainInput struct {
	UserID            int64 `json:"userId"`            // 用户id
	CryptominerTypeID int64 `json:"cryptominerTypeId"` // 矿机种类ids
}

type JudgeBargainReply struct {
	IsBargain bool `json:"isBargain"` // 砍价id
}

type PropPurchaseInput struct {
	UserID       int64 `json:"userId"`       // 用户id
	PropID       int64 `json:"propId"`       // 商品id
	GoodQuantity int64 `json:"goodQuantity"` // 购买数量
}

type CryptominerPurchaseInput struct {
	UserID        int64 `json:"userId"`        // 用户id
	CryptominerID int64 `json:"cryptominerId"` // 商品id
}

type CryptominerBargainInput struct {
	UserID        int64 `json:"userId"`        // 用户id
	CryptominerID int64 `json:"cryptominerId"` // 商品id
}

type CryptominerBargainReply struct {
	BargainID int64 `json:"bargainId"` // 砍价id
	IsFirst   bool  `json:"isFirst"`   // 是否为第一次砍价
}

type GetBargainRuleInput struct {
	BargainID int64 `json:"bargainId"` // 砍价id
}

type GetBargainRuleReply struct {
	BargainRuleDescribe string `json:"bargainRuleDescribe"` // 规则描述
}

type GetBargainCryptominerInput struct {
	CryptominerID int64 `json:"cryptominerId"` // 矿机id
}

type GetBargainCryptominerReply struct {
	CryptominerName    string `json:"cryptominerName"`    // 矿机名称
	CryptominerPicture string `json:"cryptominerPicture"` // 矿机图片
}

type GetBargainProgressInput struct {
	BargainID int64 `json:"bargainId"` // 砍价id
}

type GetBargainProgressReply struct {
	ActivityStartTime string  `json:"activityStartTime"` // 活动开始时间
	RemainingPrice    float32 `json:"remainingPrice"`    // 剩余金额
}

type GetBargainRecordInput struct {
	BargainID int64 `json:"bargainId"` // 砍价id
}

type GetBargainRecordReply struct {
	Cryptominer   []*Cryptominer   `json:"cryptominer"`   // 矿机
	BargainAmount []*BargainAmount `json:"bargainAmount"` // 每份金额计算
	Profile       []*Profile       `json:"profile"`       // 对应金额的砍价人信息
}

type BargainAmount struct {
	FirstBargainPercentage float32 `json:"firstBargainPercentage"` // 初次砍价百分比
	BargainMinPrice        float32 `json:"bargainMinPrice"`        // 砍价最小额度
	BargainPrice           float32 `json:"bargainPrice"`           // 本次砍价额度
}

type Profile struct {
	UserID   int64  `json:"userId"`   // 用户id
	UserName string `json:"userName"` // 用户名
	Avatar   string `json:"avatar"`   // 用户头像
}

type JudgeGoodsPurchaseInput struct {
	UserID   int64  `json:"userId"`   // 用户id
	GoodName string `json:"goodName"` // 商品名称
}

type JudgeGoodsPurchaseReply struct {
	IsPurchase bool `json:"isPurchase"` //  true 已有购买，false 没有购买记录
}
