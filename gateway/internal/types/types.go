// Code generated by goctl. DO NOT EDIT.
package types

type UserLogin struct {
	Code         string `json:"code"`
	CodeVerifier string `json:"codeVerifier"`
	InviteId     string `json:"inviteId"`
}

type UserLoginReply struct {
	Token string `json:"token"`
}

type AdminLogin struct {
	AdminName     string `json:"adminName"`
	AdminPassword string `json:"adminPassword"`
}

type AdminLoginReply struct {
	Token string `json:"token"`
}

type UserInfoReply struct {
	UserId      string `json:"userId"`
	UserName    string `json:"userName"`
	TwitterName string `json:"twitterName"`
	UserAvatar  string `json:"userAvatar"`
	IsNew       int64  `json:"isNew"`
}

type HelpCategoryList struct {
	LanguageCode string `json:"languageCode"`
}

type GetHelpCategoryList struct {
	LanguageCode string `json:"languageCode"`
}

type HelpCategoryListReply struct {
	CategoryList []CategoryList `json:"categoryList"`
}

type CategoryList struct {
	CategoryId   string `json:"categoryId"`
	CategoryName string `json:"categoryName"`
}

type CurrentOnlinePersonReply struct {
	CurrentOnlinePerson int64 `json:"currentOnlinePerson"`
}

type RegisteredPopulationReply struct {
	RegisteredPopulation int64 `json:"registeredPopulation"`
}

type GetUserListByCondition struct {
	BlackStatus *int64  `json:"blackStatus"` //冻结状态
	PageNum     int64   `json:"pageNum"`     //页码
	PageSize    int64   `json:"pageSize"`    //每页条数
	OrderType   *string `json:"order"`       //排序
	TwitterId   *string `json:"twitterId"`   //推特id
}

type GetUserListByConditionReply struct {
	TwitterId     string `json:"twitterId"`     //推特id
	UserID        int64  `json:"userId"`        //用户id
	RegisterAt    int64  `json:"registerAt"`    //注册时间
	RecomendBy    string `json:"recomendBy"`    //推荐人
	IsBlacklisted int64  `json:"isBlacklisted"` //是否冻结
}

type BatchUpdateUserBlackStatus struct {
	UserIdList  []int64 `json:"userIdList"`  //用户id列表
	BlackStatus int64   `json:"blackStatus"` //冻结状态
}

type BatchUpdateUserBlackStatusReply struct {
	UserIdList  []int64 `json:"userIdList"`  //用户id列表
	BlackStatus int64   `json:"blackStatus"` //冻结状态
}

type CreateAdminUser struct {
	AdminName     string `json:"adminName"`     //管理员名称
	AdminPassword string `json:"adminPassword"` //管理员密码
}

type CreateAdminUserReply struct {
	Token string `json:"token"`
}

type GetHelpDocumentTitleList struct {
	HelpCategoryId string `json:"helpCategoryId"` //帮助文档分类id
	LanguageCode   string `json:"languageCode"`   //语言编码
}

type GetHelpDocumentTitleListReply struct {
	HelpDocumentTitleList []HelpDocumentTitleList `json:"helpDocumentTitleList"`
}

type HelpDocumentTitleList struct {
	HelpDocumentId int64  `json:"helpDocumentId"` //帮助文档id
	DocumentTitle  string `json:"DocumentTitle"`  //帮助文档标题
	LanguageCode   string `json:"languageCode"`   //语言编码
}

type HelpDocumentTitleListReply struct {
	HelpDocumentTitleList []HelpDocumentTitleList `json:"helpDocumentTitleList"`
}

type GetContentByHelpDocumentId struct {
	HelpDocumentId string `json:"helpDocumentId"` //帮助文档id
	LanguageCode   string `json:"languageCode"`   //语言编码
}

type ContentByHelpDocumentIdReply struct {
	HelpDocumentId  int64  `json:"helpDocumentId"`    //帮助文档id
	DocumentContent string `json:"documentContent"`   //帮助文档内容
	LanguageCode    string `json:"languageCode"`      //语言编码
	DocumentTitle   string `json:"helpDocumentTitle"` //帮助文档标题
}

type GetMessageList struct {
	LastNoticeId int64 `json:"lastNoticeId"` //通知时间
	NoticeType   int64 `json:"noticeType"`   //通知类型 1:系统通知 2:用户通知 3:全部
}

type NoticeList struct {
	NoticeId      int64  `json:"noticeId"`      //通知id
	NoticeTitle   string `json:"noticeTitle"`   //通知标题
	NoticeContent string `json:"noticeContent"` //通知内容
	NoticeTime    int64  `json:"noticeTime"`    //通知时间
	NoticeType    int64  `json:"noticeType"`    //通知类型 1:系统通知 2:用户通知
	NoticeStatus  int64  `json:"noticeStatus"`  //通知状态 1:未读 2:已读
}

type Noticelds struct {
	SystemNoticeIds          int64 `json:"systemNoticeIds"`
	TargetSystemNoticeStatus int64 `json:"targetSystemNoticeStatus"`
}

type EditNoticeStatus struct {
	EditItems []Noticelds `json:"noticelds"` // 批量编辑通知的信息
}

type EditNoticeStatusReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type GetMessageListReply struct {
	NoticeList []NoticeList `json:"noticeList"`
}

type GetMessageByNoticeId struct {
	NoticeId   int64 `json:"noticeId"`   //通知id
	NoticeType int64 `json:"noticeType"` //通知类型 1:系统通知 2:用户通知
}

type AddCategory struct {
	CategoryName string `json:"categoryName"` //分类名称
	LanguageCode string `json:"languageCode"` //语言编码
}

type AddCategoryReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type GetNoticeBy struct {
	SystemNoticeId      int64  `json:"systemNoticeId"`      //系统通知id
	SystemNoticeTitle   string `json:"systemNoticeTitle"`   //系统通知标题
	SystemNoticeContent string `json:"systemNoticeContent"` //系统通知内容
	SystemNoticeStatus  int64  `json:"systemNoticeStatus"`  //系统通知状态
	SystemNoticeTime    int64  `json:"systemNoticeTime"`    //系统通知时间
	IsAutoPublish       bool   `json:"isAutoPublish"`       //是否自动发布
}

type GetNoticeByReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type EditNotice struct {
	SystemNoticeId      int64  `json:"systemNoticeId"`      //系统通知id
	SystemNoticeTitle   string `json:"systemNoticeTitle"`   //系统通知标题
	SystemNoticeContent string `json:"systemNoticeContent"` //系统通知内容
	SystemNoticeStatus  int64  `json:"systemNoticeStatus"`  //系统通知状态
	SystemNoticeTime    string `json:"systemNoticeTime"`    //系统通知时间
	IsAutoPublish       bool   `json:"isAutoPublish"`       //是否自动发布
}

type EditNoticeReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type EditCategory struct {
	CategoryId     int64  `json:"categoryId"`  //分类id
	CategoryNameZh string `json:"category_zh"` //分类名称
	CategoryNameEn string `json:"category_en"` //分类名称
}

type EditCategoryReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type BatchDeleteCategory struct {
	CategoryIds []int64 `json:"categoryIds"` //分类id
}

type BatchDeleteCategoryReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type CategorylistStatus struct {
	CategoryIds []int64 `json:"categoryIds"` //分类id
	Status      int64   `json:"status"`      //分类状态
}

type CategorylistStatusReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type EditDocumentContent struct {
	HelpCategoryId int64  `json:"helpCategoryId"` //帮助文档id
	Helpdocumentid int64  `json:"helpdocumentid"` //帮助文档id
	ContentZh      string `json:"contentZh"`      //内容
	ContentEn      string `json:"contentEn"`      //内容
	TitleZh        string `json:"titleZh"`        //标题
	TitleEn        string `json:"titleEn"`        //标题
}

type EditDocumentContentReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type DocumentContentlistStatus struct {
	Helpdocumentids []int64 `json:"helpdocumentids"` //帮助文档id
	Status          int64   `json:"status"`          //帮助文档状态
}

type DocumentContentlistStatusReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type BatchDeleteDocumentContent struct {
	Helpdocumentids []int64 `json:"helpdocumentids"` //帮助文档id
}

type BatchDeleteDocumentContentReply struct {
	IsSuccess bool `json:"isSuccess"` //是否成功
}

type GetCategoryListByCondition struct {
	CategoryName string `json:"categoryName"`
	IsShow       bool   `json:"isShow"`
	LastId       int64  `json:"lastId"`
}

type GetCategoryListByConditionReply struct {
	HelpCategoryList []HelpCategoryList `json:"helpCategoryList"`
	TotalCount       int64              `json:"totalCount"` //这次返回的数据总共有多少条
	TotalPage        int64              `json:"totalPage"`  //总页数
}

type CreatePublishTaskInput struct {
	Creator      string  `json:"creator"`
	TweetAddress string  `json:"tweetAddress"`
	TweetTopic   string  `json:"tweetTopic"`
	TweetAvatar  string  `json:"tweetAvatar"`
	Label        string  `json:"label"`
	AwardBudget  float64 `json:"awardBudget"`
	MaxUser      int64   `json:"maxUser"`
	AwardAmount  float64 `json:"awardAmount"`
}

type Mistake struct {
	Msg string `json:"msg"`
}

type UserLaunchTaskList struct {
	UserId           string          `json:"userId"`
	UserName         string          `json:"userName"`
	UserNick         string          `json:"userNick"`
	UserAvatar       string          `json:"userAvatar"`
	LaunchAmount     int64           `json:"launchAmount"`
	AccomplishAmount int64           `json:"accomplishAmount"`
	PaginationData   PaginationData  `json:"paging"`
	PersonalList     []*PersonalList `json:"personalList"`
}

type PersonalList struct {
	TaskId       string  `json:"taskId"`
	CreatedAt    string  `json:"createdAt"`
	Creator      string  `json:"creator"`
	Label        string  `json:"label"`
	Status       int64   `json:"status"`
	TweetDetails string  `json:"tweetDetails"`
	TweetPicture string  `json:"tweetPicture"`
	AwardBudget  float64 `json:"awardBudget"`
	MaxUser      int64   `json:"maxUser"`
	Accomplish   int64   `json:"accomplish"`
}

type RePublishTask struct {
	PaginationData   PaginationData      `json:"paging"`
	RePublishTaskBak []*RePublishTaskBak `json:"data"`
}

type RePublishTaskBak struct {
	TaskID        string  `json:"taskId"`
	CreatedAt     string  `json:"createdAt"`
	Creator       string  `json:"creator"`
	CreatorName   string  `json:"creatorName"`
	CreatorNick   string  `json:"creatorNick"`
	CreatorAvatar string  `json:"creatorAvatar"`
	Status        int64   `json:"status"`
	Label         string  `json:"label"`
	TweetDetails  string  `json:"tweetDetails"`
	TweetPicture  string  `json:"tweetPicture"`
	AwardBudget   float64 `json:"awardBudget"`
	MaxUser       int64   `json:"maxUser"`
	AwardAmount   float64 `json:"awardAmount"`
	EndTime       string  `json:"endTime"`
	Accomplish    int64   `json:"accomplish"`
	Call          int64   `json:"call"`
}

type PaginationData struct {
	Total   int64 `json:"total"`
	Page    int64 `json:"page"`
	PerPage int64 `json:"per_page"`
}

type PublishTaskInput struct {
	Status   int64 `json:"status"`
	CurrPage int64 `json:"currPage"`
	MaxNum   int64 `json:"maxNum"`
}

type ReTaskDetails struct {
	RePublishTaskBak RePublishTaskBak  `json:"publishTask"`
	ParticipantBak   []*ParticipantBak `json:"participant"`
}

type TaskDetailsInput struct {
	TaskId string `json:"taskId"`
	UserId string `json:"userId"`
}

type ParticipantBak struct {
	Id          int64   `json:"id"`
	CreatedAt   string  `json:"createdAt"`
	UserId      string  `json:"userId"`
	TaskId      string  `json:"taskId"`
	UserName    string  `json:"userName"`
	NickName    string  `json:"nickName"`
	Avatar      string  `json:"avatar"`
	AwardAmount float64 `json:"awardAmount"`
	Accomplish  int64   `json:"accomplish"`
}

type UserLaunchTaskListInput struct {
	UserId   string `json:"userId"`
	CurrPage int64  `json:"currPage"`
	MaxNum   int64  `json:"maxNum"`
	Status   int64  `json:"status"`
}

type TaskIDInquireInput struct {
	TaskId string `json:"taskId"`
}

type UserIDInquireInput struct {
	UserId string `json:"userId"`
}

type PerformTaskInput struct {
	TaskId string `json:"taskId"`
	UserId string `json:"userId"`
}

type TreasureTaskSrtInput struct {
	TreasureId        string               `json:"treasureId"`
	Name              string               `json:"name"`
	DemandIntegral    int64                `json:"demandIntegral"`
	ExperienceReward  int64                `json:"experienceReward"`
	RewardQuantity    int64                `json:"rewardQuantity"`
	TreasureTaskStage []*TreasureTaskStage `json:"treasureTaskStage"`
}

type TreasureTaskStage struct {
	ID               int64  `json:"id"`
	Treasure         string `json:"treasure"`
	TreasureSequence int64  `json:"treasureSequence"`
	StageExperience  int64  `json:"stageExperience"`
	StageReward      int64  `json:"stageReward"`
}

type TreasureTaskInput struct {
	TreasureId string `json:"treasureId"`
	Status     int32  `json:"status"`
}

type TreasureTaskListInput struct {
	Name     string `json:"name"`
	Reward   int64  `json:"reward"`
	CurrPage int64  `json:"currPage"`
	MaxNum   int64  `json:"maxNum"`
}

type ReTreasureTaskSrt struct {
	PaginationData       PaginationData          `json:"paginationData"`
	TreasureTaskSrtInput []*TreasureTaskSrtInput `json:"treasureTaskSrtInput"`
}

type ReSubtaskStyle struct {
	SubtaskStyle []*SubtaskStyle `json:"subtaskStyle"`
}

type SubtaskStyle struct {
	TaskId         string `json:"taskId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
}

type AssociatedSubtaskSrt struct {
	SubtaskId      string `json:"subtaskId"`
	TaskId         string `json:"taskId"`
	TreasureId     string `json:"treasureId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
	Experience     int64  `json:"experience"`
	Number         int64  `json:"number"`
	Article        string `json:"article"`
	Link           string `json:"link"`
	Label          string `json:"label"`
}

type ReAssociatedSubtask struct {
	AssociatedSubtask []*AssociatedSubtask `json:"associatedSubtask"`
}

type AssociatedSubtask struct {
	SubtaskId      string `json:"subtaskId"`
	TaskId         string `json:"taskId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
	Reward         int64  `json:"reward"`
	Experience     int64  `json:"experience"`
	Number         int64  `json:"number"`
	Article        string `json:"article"`
	Link           string `json:"link"`
	Label          string `json:"label"`
	TreasureId     string `json:"treasureId"`
}

type AmendChestCollectionInput struct {
	UserId string `json:"userId"`
	Amount int64  `json:"amount"`
}

type ReChestCollectionSrt struct {
	UserId                string                   `json:"userId"`
	DemandIntegral        int64                    `json:"demandIntegral"`
	ChestAmount           int64                    `json:"chestAmount"`
	RewardQuantity        int64                    `json:"rewardQuantity"`
	TreasureTaskStageSeed []*TreasureTaskStageSeed `json:"treasureTaskStageSeed"`
	AssociatedSubtaskSeed []*AssociatedSubtaskSeed `json:"associatedSubtaskSeed"`
}

type TreasureTaskStageSeed struct {
	Treasure         string  `json:"treasure"`
	TreasureSequence int64   `json:"treasureSequence"`
	StageExperience  int64   `json:"stageExperience"`
	TreasureRatio    float64 `json:"treasureRatio"`
	StageReward      int64   `json:"stageReward"`
}

type AssociatedSubtaskSeed struct {
	Id             uint64 `json:"id"`
	TreasureId     string `json:"treasureId"`
	TaskId         string `json:"taskId"`
	TaskName       string `json:"taskName"`
	TaskNameEng    string `json:"taskNameEng"`
	TaskDetails    string `json:"taskDetails"`
	TaskDetailsEng string `json:"taskDetailsEng"`
	TaskStatus     int64  `json:"taskStatus"`
	Reward         int64  `json:"reward"`
	Experience     int64  `json:"experience"`
	Number         int64  `json:"number"`
	Article        string `json:"article"`
	Link           string `json:"link"`
	Label          string `json:"label"`
	Complete       int64  `json:"complete"`
}

type CreateUserPowerTaskInput struct {
	PublishesUserId string `json:"publishesUserId"`
	HelperUserId    string `json:"helperUserId"`
}

type CreateLabelInput struct {
	UserId string `json:"userId"`
	Label  string `json:"label"`
}

type LabelInput struct {
	LabelId int64 `json:"labelId"` // 标签ID
}

type ReLabelListOut struct {
	ReLabelList []*ReLabelList `json:"reLabelList"`
}

type ReLabelList struct {
	Id      uint64 `json:"id"`
	Creator string `json:"creator"` // 创建者
	Content string `json:"content"` // 内容
}

type CreateAssistanceTaskInput struct {
	UserId   string `json:"userId"`
	UserName string `json:"userName"`
	Avatar   string `json:"avatar"`
}

type UserPublishingAssistanceTask struct {
	ID        int64  `json:"id"`
	CreatedAt string `json:"createdAt"`
	UserId    string `json:"userId"`
	UserName  string `json:"userName"`
	Avatar    string `json:"avatar"`
}

type ParticipatingTaskInput struct {
	UserId   string `json:"userId"`
	UserName string `json:"userName"`
	NickName string `json:"nickName"`
	Avatar   string `json:"avatar"`
	TaskID   string `json:"taskId"`
}

type TaskCallInput struct {
	UserId string `json:"userId"`
	Sharer string `json:"sharer"`
	TaskID string `json:"taskId"`
}

type CreateCryptominerInput struct {
	AdminUserID         int64  `json:"adminUserId"`
	CryptominerName     string `json:"cryptominerName"`
	CryptominerPicture  string `json:"cryptominerPicture"`
	CryptominerDescribe string `json:"cryptominerDescribe"`
	CryptominerPrice    int64  `json:"cryptominerPrice"`
	CryptominerDuration int64  `json:"cryptominerDuration"`
	CryptominerPower    int64  `json:"cryptominerPower"`
	PaymentWay          string `json:"paymentWay"`
}

type IsSuccessReply struct {
	IsSuccess bool `json:"isSuccess"` // 创建成功
}

type CreatePropInput struct {
	AdminUserID  int64  `json:"adminUserId"`  // 创建者id
	PropName     string `json:"propName"`     // 矿机名称
	PropPicture  string `json:"propPicture"`  // 矿机图片
	PropDescribe string `json:"propDescribe"` // 矿机描述
	PropPrice    int64  `json:"propPrice"`    // 矿机价格
	PaymentWay   string `json:"paymentWay"`   // 支付方式 0：U 1：ADF
}

type AdminGoodListInput struct {
	AdminUserID int64 `json:"adminUserId"` // 管理员id
}

type Activity struct {
	ActivityID       int64  `json:"activityId"`       // 关联矿机种类id
	CryptominerName  string `json:"cryptominerName"`  // 矿机名称
	UserAmount       int64  `json:"userAmount"`       // 砍价人数
	MinPrice         string `json:"minPrice"`         // 最小砍价金额
	FirstBargainPer  string `json:"firstBargainPer"`  // 首次砍价百分比
	FriendBargainPer string `json:"friendBargainPer"` // 好友砍价比率
	IsActivation     int64  `json:"isActivation"`     // 矿机状态  0：未开启  1：开启
}

type AdminGoodListReply struct {
	AdminGood []*AdminGood `json:"adminGood"`
}

type AdminGood struct {
	GoodTypeID   int64  `json:"goodTypeID"`   // 商品typeid
	GoodName     string `json:"goodName"`     // 商品名称
	GoodDuration int64  `json:"goodDuration"` // 商品工作时长
	PaymentWay   string `json:"paymentWay"`   // 支付方式 0：U ,1:ADF
	PropPrice    int64  `json:"propPrice"`    // 商品价格
	GoodStatus   string `json:"goodStatus"`   // 商品状态  0：待上架  1：已上架 2：未上架
}

type StartGoodInput struct {
	GoodTypeID int64 `json:"goodTypeId"` // 商品种类id
}

type CreateActivityInput struct {
	AdminUserID       int64   `json:"adminUserID"`       // 管理员id
	CryptominerTypeID int64   `json:"cryptominerTypeID"` // 关联矿机种类id
	UserAmount        int64   `json:"userAmount"`        // 砍价人数
	MinPrice          float64 `json:"minPrice"`          // 最小砍价金额
	FirstBargainPer   float64 `json:"firstBargainPer"`   // 首次砍价百分比
	FriendBargainPer  float64 `json:"friendBargainPer"`  // 好友砍价比率
}

type AdminActivityListInput struct {
	AdminUserID int64 `json:"adminUserID"` // 管理员id
}

type AdminActivityListReply struct {
	Activity []*Activity `json:"activity"`
}

type StartActivityInput struct {
	ActivityID int64 `json:"activityId"` // 关联矿机种类id
}

type GetGoodsListInput struct {
}

type GetGoodsListReply struct {
	Cryptominer []*Cryptominer `json:"cryptominer"`
	Prop        []*Prop        `json:"prop"`
}

type Cryptominer struct {
	CryptominerID        int64  `json:"cryptominerId"` // ID
	UserID               int64  `json:"userId"`
	CryptominerTypeID    int64  `json:"cryptominerTypeId"`    // 矿机种类id
	CryptominerName      string `json:"cryptominerName"`      // 矿机名称
	CryptominerPicture   string `json:"cryptominerPicture"`   // 矿机图片
	CryptominerDescribe  string `json:"cryptominerDescribe"`  // 矿机描述
	CryptominerPrice     int64  `json:"cryptominerPrice"`     // 矿机价格
	OptionalStatus       string `json:"optionalStatus"`       // 矿机状态 0：未购买 1：工作中 2：已失效 3：砍价中
	PurchaseTime         string `json:"purchaseTime"`         // 购买时间
	IsBargain            bool   `json:"isBargain"`            // 是否可砍
	PurchaseWay          string `json:"purchaseWay"`          // 购买方式 0：全额购买 1：限时砍价
	PaymentWay           string `json:"paymentWay"`           // 支付方式 0：U 1：ADF
	CryptominerStartTime string `json:"cryptominerStartTime"` // 矿机开始运作时间
	CryptominerEndTime   string `json:"cryptominerEndTime"`   // 矿机失效时间
	CryptominerDuration  int64  `json:"cryptominerDuration"`  // 矿机运作时间
	CryptominerPower     int64  `json:"cryptominerPower"`     // 矿机算力
}

type Prop struct {
	PropID       int64  `json:"propId"` // ID
	UserID       int64  `json:"userId"`
	PropTypeID   int64  `json:"propTypeId"`   // 道具种类id
	PropName     string `json:"propName"`     // 道具名称
	PropPicture  string `json:"propPicture"`  // 道具图片
	PropDescribe string `json:"propDescribe"` // 道具描述
	PropPrice    int64  `json:"propPrice"`    // 道具价格
	PurchaseTime string `json:"purchaseTime"` // 购买时间
	PaymentWay   string `json:"paymentWay"`   // 支付方式 0：U 1：ADF
}

type JudgeBargainInput struct {
	CryptominerTypeID int64 `json:"cryptominerTypeId"` // 矿机种类ids
}

type JudgeBargainReply struct {
	IsBargain           bool   `json:"isBargain"`           // 砍价id
	BargainRuleDescribe string `json:"bargainRuleDescribe"` // 规则描述
	IsFirst             bool   `json:"isFirst"`             // 是否为第一次砍价
}

type PropPurchaseInput struct {
	PropID       int64 `json:"propId"`       // 商品id
	GoodQuantity int64 `json:"goodQuantity"` // 购买数量
}

type CryptominerPurchaseInput struct {
	CryptominerID int64 `json:"cryptominerId"` // 商品id
}

type CryptominerBargainInput struct {
	CryptominerID int64 `json:"cryptominerId"` // 商品id
}

type CryptominerBargainReply struct {
	BargainID int64 `json:"bargainId"` // 砍价id
}

type AssistorBargainInput struct {
	BargainID int64 `json:"bargainId"` // 砍价id
}

type GetBargainRecordInput struct {
	BargainID int64 `json:"bargainId"` // 砍价id
}

type GetBargainRecordReply struct {
	BargainRecord *BargainRecord `json:"bargainRecord"` // 矿机
	LoginStatus   string         `json:"loginStatus"`   // 登陆状态 0：砍价发起人 1:助力人 2：无token
	InActivity    bool           `json:"inActivity"`    // 是否活动中，false包括倒计时结束，提前付款结束
	BargainMax    bool           `json:"bargainMax"`    // 砍价次数已达上限
	ISBargain     bool           `json:"iSBargain"`     // 是否可以砍价
}

type BargainRecord struct {
	BargainID          int64          `json:"bargainId"`          // 砍价id
	UserName           string         `json:"userName"`           // 用户名
	TwitterName        string         `json:"twitterName"`        // 用户推特名
	CryptominerName    string         `json:"cryptominerName"`    // 矿机名称
	CryptominerPicture string         `json:"cryptominerPicture"` // 矿机图片
	CryptominerPrice   int64          `json:"cryptominerPrice"`   // 矿机价格
	ActivityStartTime  int64          `json:"activityStartTime"`  // 砍价开始时间戳
	RemainingPrice     float64        `json:"remainingPrice"`     // 剩余金额
	SupportUser        []*SupportUser `json:"supportUser"`        //助力人信息
}

type SupportUser struct {
	AssistorID   int64   `json:"assistorId"`   // 助力人id
	AssistorName string  `json:"assistorName"` // 助力人名
	TwitterName  string  `json:"TwitterName"`  // 推特名
	Avatar       string  `json:"avatar"`       // 助力人头像
	BargainPrice float64 `json:"bargainPrice"` // 助力金额
}

type BargainPayInput struct {
	CryptominerID int64 `json:"cryptominerId"` // 商品id
}

type JudgeGoodsPurchaseInput struct {
	GoodName string `json:"goodName"` // 商品名称
}

type JudgeGoodsPurchaseReply struct {
	IsPurchase bool `json:"isPurchase"` //  true 已有购买，false 没有购买记录
}

type GetPurchaseRecordInput struct {
}

type GetPurchaseRecordReply struct {
	PurchaseRecord []*PurchaseRecord `json:"purchaseRecord"` // 对应金额的砍价人信息
}

type PurchaseRecord struct {
	PurchaseRecordID int64  `json:"purchaseRecordId"` // 购买记录id
	GoodName         string `json:"goodName"`         // 商品名称
	GoodPicture      string `json:"goodPicture"`      // 商品图片
	GoodQuantity     int64  `json:"goodQuantity"`     // 商品数量
	PurchaseTime     string `json:"purchaseTime"`     // 购买时间
	PurchasePrice    string `json:"purchasePrice"`    // 购买价格
	PurchaseWay      string `json:"purchaseWay"`      // 购买方式 0：全额购买 1：限时砍价
	PaymentWay       string `json:"paymentWay"`       // 支付方式 0：U ,1:ADF
}
